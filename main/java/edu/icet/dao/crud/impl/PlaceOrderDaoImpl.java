package edu.icet.dao.crud.impl;import edu.icet.dao.crud.PlaceOrderDao;import edu.icet.entity.OrderHasItemEntity;import edu.icet.util.HibernateUtil;import javafx.collections.FXCollections;import javafx.collections.ObservableList;import org.hibernate.Session;import org.hibernate.query.Query;import java.util.List;public class PlaceOrderDaoImpl implements PlaceOrderDao {    @Override    public OrderHasItemEntity search(Integer integer) {        return null;    }    @Override    public ObservableList<OrderHasItemEntity> getAll() {        Session session = HibernateUtil.getSession();        session.getTransaction().begin();        List<OrderHasItemEntity> list = session.createQuery("FROM order_has_items").list();        session.close();        ObservableList<OrderHasItemEntity> observableList = FXCollections.observableArrayList();        observableList.addAll(list);        return observableList;    }    @Override    public void insert(OrderHasItemEntity orderHasItemEntity) {        //    }    @Override    public boolean update(OrderHasItemEntity orderHasItemEntity) {        return false;    }    @Override    public boolean delete(Integer id) {        Session session = HibernateUtil.getSession();        session.getTransaction().begin();        Query query = session.createQuery("DELETE FROM order_has_items WHERE orderId=:id");        query.setParameter("id",id);        int i = query.executeUpdate();        session.getTransaction().commit();        session.close();        return i > 0;    }    @Override    public int getLatestId(){        Session session = HibernateUtil.getSession();        session.getTransaction().begin();        Query query = session.createQuery("SELECT id FROM order_has_items ORDER BY id DESC LIMIT 1");        try {            return (int) query.uniqueResult(); //returns the ID        }catch (NullPointerException e){            return 0;        }    }}